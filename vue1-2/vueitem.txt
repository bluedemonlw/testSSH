vue的选项
1、选项就是在vue构造器中配置功能的前缀(vue已经帮我们定义好了),vue的选项有很多,比如:el,data,methods,template...
  1.template模板
    模板定义:3种方式
    (1)直接写在选项模板中
    (2)写在template标签的模板,必须要有根节点
    (3)写在script标签中的模板,不能跨文件引用
    模板声明了数据和最终展现给用户DOM之间映射的关系
  2.computed计算属性
    当依赖的属性值发生变化时,会触发计算属性的重新计算,重新计算是自动的。
    数据或属性值没有发生变化时,更新视图计算属性方法不会触发重新计算,还是计算之前的值
    何时使用:当数据需要被处理之后在去使用的时候,就可以用computed计算方法节省性能。
  3.watch监听函数的变化
    观察者模式,数据发生变化,执行对应的逻辑
  4.生命周期函数(钩子函数)
    vue实例有一个完整的生命周期,就是从实例开始创建,到初始化数据,编译模板,挂载DOM->渲染,更新->渲染->卸载实例等一系列过程,我们称之为vue的生命周期。简单来说就是vue实例从创建到销毁的过程。
  在vue生命周期中提供了一些钩子函数,给了我们执行自定义逻辑的机会。
    1.beforeCreate
    2.created
    3.beforeMount-挂载前
    4.mounted-挂载后
    5.beforeUpdated
    6.updated
    7.beforedestroy
    8.destroyed
  vue的组件component
    1.组件是vue中最强大的功能之一。可以说vue的开发就是组件的开发。
    2.组件其实就是可复用的vue实例,并且有一个名字
      制作组件其实就是制作自定义的标签,标签名要符合W3C规范
    3.注册组件:全局注册和局部注册
      (1)全局注册组件
        就是在构造器外部使用全局API,vue.component来注册
      (2)局部注册组件
        在vue构造器内部注册,只能在内部使用
    4.组件中的选项
      组件也是一个vue实例,里面也可以有vue实例上的选项,比如:el,data,template...,除了el。
    5.组件中使用指令和事件
    6.父子组件
      在实际开发中,我们经常会遇到在自定义组件中再嵌套一个组件,即组件中的嵌套=父子组件。
    7.组件之间的通信
      组件实例的作用域是相互独立的,这意味着不如直接使用子组件内的数据或修改父组件的数据。
      父子组件通信规则:
        (1)父组件向子组件传递数据:
            在子组件中定义选项props,在该选项中声明自定义属性,在父组件中使用自定义属性来传值
        (2)子组件向父组件传递数据:
          1.子组件通过$emit()方法向父组件派发一个自定义事件,向父组件传递数据
            $emit('自定义事件名',data...)
          2.父组件使用v-on来绑定这个自定义事件
            父组件中用v-on绑定自定义事件
    8.组件插槽slot
      slot:组件内容的扩展,可以使用slot给组件传递内容,组件接收并输出
    9.组件的引用
      组件之间交互基本通过props,$emit,slot就能实现,但有时仍需直接访问组件中的内容。可使用ref为组件定义一个引用id,用$refs.id名来访问组件内部
  vue实例上的属性和方法
    我们可以通过实例上的属性和方法在构造器外部去使用,实例上的属性和方法都是以$开头