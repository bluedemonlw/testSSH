1.数据库
  存放数据的仓库
  关系型数据库
    DB2等
  特点:
    1.数据库中有表,表中包含行(数据/记录)和列(字段名)
      数据之间有关系,不是零散数据
    2.保存的数据与字段的顺序必须保持一致
    3.sql语句方便管理数据库
      增删改查,投影,连接,并,交
      增:向数据库中增加数据/插入数据(insert into 表名 values)
      删:删除数据库中的数据(delete from 表名)[where...指代条件]
      改:修改数据库中的数据(update 表名 set 字段名="新的数据")
      查:查询数据库中表的数据(select * from 表名)
    4.数据库向后台(java,php,python,c#,ASP,nodejs)提供了接口
  缺点:
    1.字段使操作不够灵活
    2.数据不灵活
      同一个字段,数据类型必须一样
      某些时候,必须要填入数据,不能不填
2.NoSQL(非关系型数据库)
  not only sql
  与关系型数据库的区别:
  保存的是集合(相当于关系型的表格)
  集合中的每条数据是文档,但表格数据为行(文档相当于数据)
  综上所述,关系型数据库中有表,表中有记录;非关系型数据库有集合,集合中有文档。
3.MongoDB
   1)安装
   2)常用命令
    1.启动数据库服务
      mongod --dbpath 目标文件夹路径
      (mongod单独使用,会使用默认的文件夹C:/data/db)
      当最后一行出现on port 27017则表示数据库服务启动成功
      注意:
        此时该命令窗口不可以关闭
        需要重新打开新的命令窗口来操作后续指令
    2.连接数据库服务
      mongo
      重新打开一个命令窗口,输入上面的指令
      连接成功后,会进入mongo环境,可以使用mongo命令
      前面的2个命令(mongod,mongo),是在windows环境下执行的
    3.查看当前服务器中有哪些数据库
      show dbs
    4.创建/使用某个数据库
      use dbName(数据库名)
      当数据库存在,直接使用;当数据库不存在,先创建再使用
    5.查看当前所在的数据库名
      db
    6.创建集合并向其中插入一条数据(文档)
      db.集合名.insert(json对象)
      db.student.insert({id:1,name:"zs",age:23});
      集合中添加3条数据
    7.查询数据库中某一个集合的数据
      db.集合名.find()
      查看所有数据,也可以写成db.集合名.find({})
      {}表示查询的条件,不写/空对象,表示无条件查询
    8.查看当前数据库中有哪些集合
      show collections
    9.删除集合中的数据
      db.集合名.remove(json条件)
      json条件必须添加,如果是无条件删除,则为{}
      db.集合名.remove({id:1})删除id为1的数据
    10.修改数据
      db.集合名.update(json条件,json数据)
      db.student.update({id:2},{age:32});
      结果:不是修改age的值,而是替换原来的数据
      修改数据而不是替换数据:
      db.student.update({id:2},{$set:{age:32}});
      当提交匹配到多条时,只会匹配到第一个并修改第一个数据,
      当匹配到数据并修改之后,不会再匹配下去
      批量修改:添加第三个参数:{multi:true}
      db.student.update({id:2},{$set:{age:32}},{multi:true});
    11.导入数据(在windows环境下使用)
      mongoimport -d 数据库名 -c 集合名 文件路径
      mongoimport --db 数据库名 --collection 集合名 -- drop --file 文件路径
      将文件数据导入指定集合,如果集合存在,先删除,再创建新集合导入数据
    12.删除集合
      db.集合名.drop()
    13.删除数据库(删除当前所在的数据库)
      db.dropDatabase()
      删除之后,输入db,显示的是被删除的数据库
      相当于刚连接数据库之后使用use创建一个新的数据库
  3)关系
    1.大于 $gt(great than)
    2.大于等于 $gte(great than or equal)
    3.小于 $lt(less than)
    4.小于等于 $lte(less than or equal)
    5.等于 $eq(equal)
    6.不等于 $ne(not equal)
    查询年龄等于20岁的学生的信息
    db.stu.find({age:20})
    db.stu.find({age:{$eq:20}})
    查询年龄大于等于20岁的信息
    db.stu.find({age:{$gte:20}})
    查询年龄不是20岁的信息
    db.stu.find({age:{$ne:20}})
    7.与 $and
     查询年龄20并且性别男的信息
     db.stu.find({age:20,sex:"M"})
     查询年龄44且id101的信息
     db.stu.find({age:44,id:101})
     db.stu.find({ $and:[{age:44},{id:101}] })
    8.或 $or
    9.非 $not
    10.nor既不是,也不是